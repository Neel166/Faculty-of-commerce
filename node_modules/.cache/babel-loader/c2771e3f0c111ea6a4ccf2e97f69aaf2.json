{"ast":null,"code":"//selecting all required elements\nconst start_btn = document.querySelector(\".start_btn button\");\nconst info_box = document.querySelector(\".info_box\");\nconst exit_btn = info_box.querySelector(\".buttons .quit\");\nconst continue_btn = info_box.querySelector(\".buttons .restart\");\nconst quiz_box = document.querySelector(\".quiz_box\");\nconst result_box = document.querySelector(\".result_box\");\nconst option_list = document.querySelector(\".option_list\");\nconst time_line = document.querySelector(\"header .time_line\");\nconst timeText = document.querySelector(\".timer .time_left_txt\");\nconst timeCount = document.querySelector(\".timer .timer_sec\"); // if startQuiz button clicked\n\nstart_btn.onclick = () => {\n  info_box.classList.add(\"activeInfo\"); //show info box\n}; // if exitQuiz button clicked\n\n\nexit_btn.onclick = () => {\n  info_box.classList.remove(\"activeInfo\"); //hide info box\n}; // if continueQuiz button clicked\n\n\ncontinue_btn.onclick = () => {\n  info_box.classList.remove(\"activeInfo\"); //hide info box\n\n  quiz_box.classList.add(\"activeQuiz\"); //show quiz box\n\n  showQuetions(0); //calling showQestions function\n\n  queCounter(1); //passing 1 parameter to queCounter\n\n  startTimer(15); //calling startTimer function\n\n  startTimerLine(0); //calling startTimerLine function\n};\n\nlet timeValue = 15;\nlet que_count = 0;\nlet que_numb = 1;\nlet userScore = 0;\nlet counter;\nlet counterLine;\nlet widthValue = 0;\nconst restart_quiz = result_box.querySelector(\".buttons .restart\");\nconst quit_quiz = result_box.querySelector(\".buttons .quit\"); // if restartQuiz button clicked\n\nrestart_quiz.onclick = () => {\n  quiz_box.classList.add(\"activeQuiz\"); //show quiz box\n\n  result_box.classList.remove(\"activeResult\"); //hide result box\n\n  timeValue = 15;\n  que_count = 0;\n  que_numb = 1;\n  userScore = 0;\n  widthValue = 0;\n  showQuetions(que_count); //calling showQestions function\n\n  queCounter(que_numb); //passing que_numb value to queCounter\n\n  clearInterval(counter); //clear counter\n\n  clearInterval(counterLine); //clear counterLine\n\n  startTimer(timeValue); //calling startTimer function\n\n  startTimerLine(widthValue); //calling startTimerLine function\n\n  timeText.textContent = \"Time Left\"; //change the text of timeText to Time Left\n\n  next_btn.classList.remove(\"show\"); //hide the next button\n}; // if quitQuiz button clicked\n\n\nquit_quiz.onclick = () => {\n  window.location.reload(); //reload the current window\n};\n\nconst next_btn = document.querySelector(\"footer .next_btn\");\nconst bottom_ques_counter = document.querySelector(\"footer .total_que\"); // if Next Que button clicked\n\nnext_btn.onclick = () => {\n  if (que_count < questions.length - 1) {\n    //if question count is less than total question length\n    que_count++; //increment the que_count value\n\n    que_numb++; //increment the que_numb value\n\n    showQuetions(que_count); //calling showQestions function\n\n    queCounter(que_numb); //passing que_numb value to queCounter\n\n    clearInterval(counter); //clear counter\n\n    clearInterval(counterLine); //clear counterLine\n\n    startTimer(timeValue); //calling startTimer function\n\n    startTimerLine(widthValue); //calling startTimerLine function\n\n    timeText.textContent = \"Time Left\"; //change the timeText to Time Left\n\n    next_btn.classList.remove(\"show\"); //hide the next button\n  } else {\n    clearInterval(counter); //clear counter\n\n    clearInterval(counterLine); //clear counterLine\n\n    showResult(); //calling showResult function\n  }\n}; // getting questions and options from array\n\n\nfunction showQuetions(index) {\n  const que_text = document.querySelector(\".que_text\"); //creating a new span and div tag for question and option and passing the value using array index\n\n  let que_tag = '<span>' + questions[index].numb + \". \" + questions[index].question + '</span>';\n  let option_tag = '<div class=\"option\"><span>' + questions[index].options[0] + '</span></div>' + '<div class=\"option\"><span>' + questions[index].options[1] + '</span></div>' + '<div class=\"option\"><span>' + questions[index].options[2] + '</span></div>' + '<div class=\"option\"><span>' + questions[index].options[3] + '</span></div>';\n  que_text.innerHTML = que_tag; //adding new span tag inside que_tag\n\n  option_list.innerHTML = option_tag; //adding new div tag inside option_tag\n\n  const option = option_list.querySelectorAll(\".option\"); // set onclick attribute to all available options\n\n  for (i = 0; i < option.length; i++) {\n    option[i].setAttribute(\"onclick\", \"optionSelected(this)\");\n  }\n} // creating the new div tags which for icons\n\n\nlet tickIconTag = '<div class=\"icon tick\"><i class=\"fas fa-check\"></i></div>';\nlet crossIconTag = '<div class=\"icon cross\"><i class=\"fas fa-times\"></i></div>'; //if user clicked on option\n\nfunction optionSelected(answer) {\n  clearInterval(counter); //clear counter\n\n  clearInterval(counterLine); //clear counterLine\n\n  let userAns = answer.textContent; //getting user selected option\n\n  let correcAns = questions[que_count].answer; //getting correct answer from array\n\n  const allOptions = option_list.children.length; //getting all option items\n\n  if (userAns == correcAns) {\n    //if user selected option is equal to array's correct answer\n    userScore += 1; //upgrading score value with 1\n\n    answer.classList.add(\"correct\"); //adding green color to correct selected option\n\n    answer.insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to correct selected option\n\n    console.log(\"Correct Answer\");\n    console.log(\"Your correct answers = \" + userScore);\n  } else {\n    answer.classList.add(\"incorrect\"); //adding red color to correct selected option\n\n    answer.insertAdjacentHTML(\"beforeend\", crossIconTag); //adding cross icon to correct selected option\n\n    console.log(\"Wrong Answer\");\n\n    for (i = 0; i < allOptions; i++) {\n      if (option_list.children[i].textContent == correcAns) {\n        //if there is an option which is matched to an array answer \n        option_list.children[i].setAttribute(\"class\", \"option correct\"); //adding green color to matched option\n\n        option_list.children[i].insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to matched option\n\n        console.log(\"Auto selected correct answer.\");\n      }\n    }\n  }\n\n  for (i = 0; i < allOptions; i++) {\n    option_list.children[i].classList.add(\"disabled\"); //once user select an option then disabled all options\n  }\n\n  next_btn.classList.add(\"show\"); //show the next button if user selected any option\n}\n\nfunction showResult() {\n  info_box.classList.remove(\"activeInfo\"); //hide info box\n\n  quiz_box.classList.remove(\"activeQuiz\"); //hide quiz box\n\n  result_box.classList.add(\"activeResult\"); //show result box\n\n  const scoreText = result_box.querySelector(\".score_text\");\n\n  if (userScore > 3) {\n    // if user scored more than 3\n    //creating a new span tag and passing the user score number and total question number\n    let scoreTag = '<span>and congrats! üéâ, You got <p>' + userScore + '</p> out of <p>' + questions.length + '</p></span>';\n    scoreText.innerHTML = scoreTag; //adding new span tag inside score_Text\n  } else if (userScore > 1) {\n    // if user scored more than 1\n    let scoreTag = '<span>and nice üòé, You got <p>' + userScore + '</p> out of <p>' + questions.length + '</p></span>';\n    scoreText.innerHTML = scoreTag;\n  } else {\n    // if user scored less than 1\n    let scoreTag = '<span>and sorry üòê, You got only <p>' + userScore + '</p> out of <p>' + questions.length + '</p></span>';\n    scoreText.innerHTML = scoreTag;\n  }\n}\n\nfunction startTimer(time) {\n  counter = setInterval(timer, 1000);\n\n  function timer() {\n    timeCount.textContent = time; //changing the value of timeCount with time value\n\n    time--; //decrement the time value\n\n    if (time < 9) {\n      //if timer is less than 9\n      let addZero = timeCount.textContent;\n      timeCount.textContent = \"0\" + addZero; //add a 0 before time value\n    }\n\n    if (time < 0) {\n      //if timer is less than 0\n      clearInterval(counter); //clear counter\n\n      timeText.textContent = \"Time Off\"; //change the time text to time off\n\n      const allOptions = option_list.children.length; //getting all option items\n\n      let correcAns = questions[que_count].answer; //getting correct answer from array\n\n      for (i = 0; i < allOptions; i++) {\n        if (option_list.children[i].textContent == correcAns) {\n          //if there is an option which is matched to an array answer\n          option_list.children[i].setAttribute(\"class\", \"option correct\"); //adding green color to matched option\n\n          option_list.children[i].insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to matched option\n\n          console.log(\"Time Off: Auto selected correct answer.\");\n        }\n      }\n\n      for (i = 0; i < allOptions; i++) {\n        option_list.children[i].classList.add(\"disabled\"); //once user select an option then disabled all options\n      }\n\n      next_btn.classList.add(\"show\"); //show the next button if user selected any option\n    }\n  }\n}\n\nfunction startTimerLine(time) {\n  counterLine = setInterval(timer, 29);\n\n  function timer() {\n    time += 1; //upgrading time value with 1\n\n    time_line.style.width = time + \"px\"; //increasing width of time_line with px by time value\n\n    if (time > 549) {\n      //if time value is greater than 549\n      clearInterval(counterLine); //clear counterLine\n    }\n  }\n}\n\nfunction queCounter(index) {\n  //creating a new span tag and passing the question number and total question\n  let totalQueCounTag = '<span><p>' + index + '</p> of <p>' + questions.length + '</p> Questions</span>';\n  bottom_ques_counter.innerHTML = totalQueCounTag; //adding new span tag inside bottom_ques_counter\n}","map":{"version":3,"sources":["C:/faculty-of-commerce-website/src/quiz app/quizApp js/quiz.js"],"names":["start_btn","document","querySelector","info_box","exit_btn","continue_btn","quiz_box","result_box","option_list","time_line","timeText","timeCount","onclick","classList","add","remove","showQuetions","queCounter","startTimer","startTimerLine","timeValue","que_count","que_numb","userScore","counter","counterLine","widthValue","restart_quiz","quit_quiz","clearInterval","textContent","next_btn","window","location","reload","bottom_ques_counter","questions","length","showResult","index","que_text","que_tag","numb","question","option_tag","options","innerHTML","option","querySelectorAll","i","setAttribute","tickIconTag","crossIconTag","optionSelected","answer","userAns","correcAns","allOptions","children","insertAdjacentHTML","console","log","scoreText","scoreTag","time","setInterval","timer","addZero","style","width","totalQueCounTag"],"mappings":"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","sourcesContent":["//selecting all required elements\r\nconst start_btn = document.querySelector(\".start_btn button\");\r\nconst info_box = document.querySelector(\".info_box\");\r\nconst exit_btn = info_box.querySelector(\".buttons .quit\");\r\nconst continue_btn = info_box.querySelector(\".buttons .restart\");\r\nconst quiz_box = document.querySelector(\".quiz_box\");\r\nconst result_box = document.querySelector(\".result_box\");\r\nconst option_list = document.querySelector(\".option_list\");\r\nconst time_line = document.querySelector(\"header .time_line\");\r\nconst timeText = document.querySelector(\".timer .time_left_txt\");\r\nconst timeCount = document.querySelector(\".timer .timer_sec\");\r\n\r\n// if startQuiz button clicked\r\nstart_btn.onclick = ()=>{\r\n    info_box.classList.add(\"activeInfo\"); //show info box\r\n}\r\n\r\n// if exitQuiz button clicked\r\nexit_btn.onclick = ()=>{\r\n    info_box.classList.remove(\"activeInfo\"); //hide info box\r\n}\r\n\r\n// if continueQuiz button clicked\r\ncontinue_btn.onclick = ()=>{\r\n    info_box.classList.remove(\"activeInfo\"); //hide info box\r\n    quiz_box.classList.add(\"activeQuiz\"); //show quiz box\r\n    showQuetions(0); //calling showQestions function\r\n    queCounter(1); //passing 1 parameter to queCounter\r\n    startTimer(15); //calling startTimer function\r\n    startTimerLine(0); //calling startTimerLine function\r\n}\r\n\r\nlet timeValue =  15;\r\nlet que_count = 0;\r\nlet que_numb = 1;\r\nlet userScore = 0;\r\nlet counter;\r\nlet counterLine;\r\nlet widthValue = 0;\r\n\r\nconst restart_quiz = result_box.querySelector(\".buttons .restart\");\r\nconst quit_quiz = result_box.querySelector(\".buttons .quit\");\r\n\r\n// if restartQuiz button clicked\r\nrestart_quiz.onclick = ()=>{\r\n    quiz_box.classList.add(\"activeQuiz\"); //show quiz box\r\n    result_box.classList.remove(\"activeResult\"); //hide result box\r\n    timeValue = 15; \r\n    que_count = 0;\r\n    que_numb = 1;\r\n    userScore = 0;\r\n    widthValue = 0;\r\n    showQuetions(que_count); //calling showQestions function\r\n    queCounter(que_numb); //passing que_numb value to queCounter\r\n    clearInterval(counter); //clear counter\r\n    clearInterval(counterLine); //clear counterLine\r\n    startTimer(timeValue); //calling startTimer function\r\n    startTimerLine(widthValue); //calling startTimerLine function\r\n    timeText.textContent = \"Time Left\"; //change the text of timeText to Time Left\r\n    next_btn.classList.remove(\"show\"); //hide the next button\r\n}\r\n\r\n// if quitQuiz button clicked\r\nquit_quiz.onclick = ()=>{\r\n    window.location.reload(); //reload the current window\r\n}\r\n\r\nconst next_btn = document.querySelector(\"footer .next_btn\");\r\nconst bottom_ques_counter = document.querySelector(\"footer .total_que\");\r\n\r\n// if Next Que button clicked\r\nnext_btn.onclick = ()=>{\r\n    if(que_count < questions.length - 1){ //if question count is less than total question length\r\n        que_count++; //increment the que_count value\r\n        que_numb++; //increment the que_numb value\r\n        showQuetions(que_count); //calling showQestions function\r\n        queCounter(que_numb); //passing que_numb value to queCounter\r\n        clearInterval(counter); //clear counter\r\n        clearInterval(counterLine); //clear counterLine\r\n        startTimer(timeValue); //calling startTimer function\r\n        startTimerLine(widthValue); //calling startTimerLine function\r\n        timeText.textContent = \"Time Left\"; //change the timeText to Time Left\r\n        next_btn.classList.remove(\"show\"); //hide the next button\r\n    }else{\r\n        clearInterval(counter); //clear counter\r\n        clearInterval(counterLine); //clear counterLine\r\n        showResult(); //calling showResult function\r\n    }\r\n}\r\n\r\n// getting questions and options from array\r\nfunction showQuetions(index){\r\n    const que_text = document.querySelector(\".que_text\");\r\n\r\n    //creating a new span and div tag for question and option and passing the value using array index\r\n    let que_tag = '<span>'+ questions[index].numb + \". \" + questions[index].question +'</span>';\r\n    let option_tag = '<div class=\"option\"><span>'+ questions[index].options[0] +'</span></div>'\r\n    + '<div class=\"option\"><span>'+ questions[index].options[1] +'</span></div>'\r\n    + '<div class=\"option\"><span>'+ questions[index].options[2] +'</span></div>'\r\n    + '<div class=\"option\"><span>'+ questions[index].options[3] +'</span></div>';\r\n    que_text.innerHTML = que_tag; //adding new span tag inside que_tag\r\n    option_list.innerHTML = option_tag; //adding new div tag inside option_tag\r\n    \r\n    const option = option_list.querySelectorAll(\".option\");\r\n\r\n    // set onclick attribute to all available options\r\n    for(i=0; i < option.length; i++){\r\n        option[i].setAttribute(\"onclick\", \"optionSelected(this)\");\r\n    }\r\n}\r\n// creating the new div tags which for icons\r\nlet tickIconTag = '<div class=\"icon tick\"><i class=\"fas fa-check\"></i></div>';\r\nlet crossIconTag = '<div class=\"icon cross\"><i class=\"fas fa-times\"></i></div>';\r\n\r\n//if user clicked on option\r\nfunction optionSelected(answer){\r\n    clearInterval(counter); //clear counter\r\n    clearInterval(counterLine); //clear counterLine\r\n    let userAns = answer.textContent; //getting user selected option\r\n    let correcAns = questions[que_count].answer; //getting correct answer from array\r\n    const allOptions = option_list.children.length; //getting all option items\r\n    \r\n    if(userAns == correcAns){ //if user selected option is equal to array's correct answer\r\n        userScore += 1; //upgrading score value with 1\r\n        answer.classList.add(\"correct\"); //adding green color to correct selected option\r\n        answer.insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to correct selected option\r\n        console.log(\"Correct Answer\");\r\n        console.log(\"Your correct answers = \" + userScore);\r\n    }else{\r\n        answer.classList.add(\"incorrect\"); //adding red color to correct selected option\r\n        answer.insertAdjacentHTML(\"beforeend\", crossIconTag); //adding cross icon to correct selected option\r\n        console.log(\"Wrong Answer\");\r\n\r\n        for(i=0; i < allOptions; i++){\r\n            if(option_list.children[i].textContent == correcAns){ //if there is an option which is matched to an array answer \r\n                option_list.children[i].setAttribute(\"class\", \"option correct\"); //adding green color to matched option\r\n                option_list.children[i].insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to matched option\r\n                console.log(\"Auto selected correct answer.\");\r\n            }\r\n        }\r\n    }\r\n    for(i=0; i < allOptions; i++){\r\n        option_list.children[i].classList.add(\"disabled\"); //once user select an option then disabled all options\r\n    }\r\n    next_btn.classList.add(\"show\"); //show the next button if user selected any option\r\n}\r\n\r\nfunction showResult(){\r\n    info_box.classList.remove(\"activeInfo\"); //hide info box\r\n    quiz_box.classList.remove(\"activeQuiz\"); //hide quiz box\r\n    result_box.classList.add(\"activeResult\"); //show result box\r\n    const scoreText = result_box.querySelector(\".score_text\");\r\n    if (userScore > 3){ // if user scored more than 3\r\n        //creating a new span tag and passing the user score number and total question number\r\n        let scoreTag = '<span>and congrats! üéâ, You got <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>';\r\n        scoreText.innerHTML = scoreTag;  //adding new span tag inside score_Text\r\n    }\r\n    else if(userScore > 1){ // if user scored more than 1\r\n        let scoreTag = '<span>and nice üòé, You got <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>';\r\n        scoreText.innerHTML = scoreTag;\r\n    }\r\n    else{ // if user scored less than 1\r\n        let scoreTag = '<span>and sorry üòê, You got only <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>';\r\n        scoreText.innerHTML = scoreTag;\r\n    }\r\n}\r\n\r\nfunction startTimer(time){\r\n    counter = setInterval(timer, 1000);\r\n    function timer(){\r\n        timeCount.textContent = time; //changing the value of timeCount with time value\r\n        time--; //decrement the time value\r\n        if(time < 9){ //if timer is less than 9\r\n            let addZero = timeCount.textContent; \r\n            timeCount.textContent = \"0\" + addZero; //add a 0 before time value\r\n        }\r\n        if(time < 0){ //if timer is less than 0\r\n            clearInterval(counter); //clear counter\r\n            timeText.textContent = \"Time Off\"; //change the time text to time off\r\n            const allOptions = option_list.children.length; //getting all option items\r\n            let correcAns = questions[que_count].answer; //getting correct answer from array\r\n            for(i=0; i < allOptions; i++){\r\n                if(option_list.children[i].textContent == correcAns){ //if there is an option which is matched to an array answer\r\n                    option_list.children[i].setAttribute(\"class\", \"option correct\"); //adding green color to matched option\r\n                    option_list.children[i].insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to matched option\r\n                    console.log(\"Time Off: Auto selected correct answer.\");\r\n                }\r\n            }\r\n            for(i=0; i < allOptions; i++){\r\n                option_list.children[i].classList.add(\"disabled\"); //once user select an option then disabled all options\r\n            }\r\n            next_btn.classList.add(\"show\"); //show the next button if user selected any option\r\n        }\r\n    }\r\n}\r\n\r\nfunction startTimerLine(time){\r\n    counterLine = setInterval(timer, 29);\r\n    function timer(){\r\n        time += 1; //upgrading time value with 1\r\n        time_line.style.width = time + \"px\"; //increasing width of time_line with px by time value\r\n        if(time > 549){ //if time value is greater than 549\r\n            clearInterval(counterLine); //clear counterLine\r\n        }\r\n    }\r\n}\r\n\r\nfunction queCounter(index){\r\n    //creating a new span tag and passing the question number and total question\r\n    let totalQueCounTag = '<span><p>'+ index +'</p> of <p>'+ questions.length +'</p> Questions</span>';\r\n    bottom_ques_counter.innerHTML = totalQueCounTag;  //adding new span tag inside bottom_ques_counter\r\n}\r\n"]},"metadata":{},"sourceType":"module"}